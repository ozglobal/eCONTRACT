<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<security:http auto-config="true" use-expressions="true">
		<!-- Restrict URLs based on role -->
		<security:intercept-url pattern="/resources/*" access="isAnonymous()" />
		<security:intercept-url pattern="/server" access="permitAll" />
		<security:access-denied-handler ref="j403" />

		<security:intercept-url pattern="/m-index"
			access="hasAnyRole('ROLE_TELLER', 'ROLE_MANAGER', 'ROLE_REPORTER', 'ROLE_CONTRACT', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/m-completed-list"
			access="hasAnyRole('ROLE_TELLER', 'ROLE_MANAGER', 'ROLE_REPORTER', 'ROLE_CONTRACT', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/completed-list"
			access="hasAnyRole('ROLE_TELLER', 'ROLE_MANAGER', 'ROLE_REPORTER', 'ROLE_CONTRACT', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/download-file"
			access="hasAnyRole('ROLE_TELLER', 'ROLE_MANAGER', 'ROLE_REPORTER', 'ROLE_CONTRACT', 'ROLE_ADMIN')" />
			
		<security:intercept-url pattern="/m-application-ozviewer"
			access="hasAnyRole('ROLE_TELLER', 'ROLE_MANAGER', 'ROLE_REPORTER', 'ROLE_CONTRACT', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/m-application-ozviewer/seach"
			access="hasAnyRole('ROLE_TELLER', 'ROLE_MANAGER', 'ROLE_REPORTER', 'ROLE_CONTRACT', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/w-application-ozviewer"
			access="hasAnyRole('ROLE_TELLER', 'ROLE_MANAGER', 'ROLE_REPORTER', 'ROLE_CONTRACT', 'ROLE_ADMIN')" />
			
		<security:intercept-url pattern="/m-pdfviewer" 
			access="permitAll" />
		<security:intercept-url pattern="/w-pdfviewer" 
			access="hasAnyRole('ROLE_TELLER')" />
			
		<security:intercept-url pattern="/upload-file-w" 
			access="hasAnyRole('ROLE_TELLER', 'ROLE_MANAGER', 'ROLE_REPORTER', 'ROLE_CONTRACT', 'ROLE_ADMIN')" />
				
		<security:form-login login-page="/"
			login-processing-url="/j_spring_security_check"
			username-parameter="j_username"
			password-parameter="j_password" 
			authentication-failure-url="/login?error=true"			
			authentication-success-handler-ref="jAuthenticationSuccessHandler" />
			
		<security:logout logout-url="/logout" logout-success-url="/login?logout=true" />
		<security:session-management invalid-session-url="/login?logout=true" />
		
		<!-- Spring Securityâ€™s to protect our site against CSRF attacks
		Alternatively, the application would enable CSRF -->
		<security:csrf disabled="true"/>
	</security:http>

	<!-- Custom access denied handler -->
	<bean id="j403" class="com.oz.unitel.security.JAccessDeniedHandler">
		<property name="errorPage" value="/login" />
	</bean>

	<!-- Custom authentication success handler -->
	<bean id="jAuthenticationSuccessHandler" class="com.oz.unitel.security.JAuthenticationSuccessHandler" />
	
	<!-- Custom authentication manager -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="jAuthenticationProvider" />
		<security:authentication-provider user-service-ref="jUserDetailsService">		
			<security:password-encoder ref="passwordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
	<bean id="jAuthenticationProvider" class="com.oz.unitel.security.AuthenticationProviderImpl" />
	<bean id="jUserDetailsService" class="com.oz.unitel.security.UserDetailsServiceImpl" />
	<!-- BCryptPasswordEncoder 
	<bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />-->
	<!-- SHAPasswordEncoder -->
	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
    	<constructor-arg value="256"/>
 	</bean>
		
</beans>
